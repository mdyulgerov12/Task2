Въпрос 1: Свържете кои от характеристиките се отнасят за абстракцията, кои за енкапсулацията. 

Правилният отговор е:  

Получава се чрез модификаторите за достъп (private, public, protected, internal) [Енкапсулация]

Постига се чрез интерфейси и абстрактни класове. [Абстракция]

Процес на скриване на подробностите на имплементацията и показване само на функционалностите към потребителя. [Абстракция]

Използва се, за  да скрива кода и информацията в един компонент, за да я защити от външния свят. [Енкапсулация]



Въпрос 2 - Дайте пример чрез код на C# за това как и къде бихте използвали презареждане на методи. 

Правилният отговор е: 


 class MathOperations
    {
        public int Add(int a, int b)
        {
            return a + b;   
        }
        public int Add(int a, int b,int c)
        {
            return a + b + c;
        }
    }
    
    
    
    Въпрос 3 - Посочете видовете полиморфизъм в .NET.
    
    Правилният отговор е:  Статичен., Динамичен.
    
    
    
    
    
    Въпрос 4 - Дайте пример за абстракция. Напишете примерен код, който:

Има класовете BaseEmployee, FullTimeEmployee и ContractEmployee.


Правилният отговор е:  



abstract class BaseEmployee
    {
        public string Name { get; set; }
        public abstract double CalculateSalary(int workingHours);
    }

    class FullTimeEmployee : BaseEmployee
    {
        public override double CalculateSalary(int workingHours)
        {
            return 250 + workingHours * 10.80;
        }
    }

    class ContractEmployee : BaseEmployee
    {
        public override double CalculateSalary(int workingHours)
        {
            return 250 + workingHours * 20;
        }
    }
    
    
    
    
    Въпрос 5:  Посочете кое от изброените твърдение е вярно за интерфейсите в C#.
    
    
    Правилният отговор е: 
    
    
    Предоставя договор, определящ как да се създаде обект, без да се интересува от спецификата на това как обекта ще прави нещата., 
    Това е референтен тип и включва само абстрактни членове като събития, методи, свойства и т.н. и няма реализации за нито един от своите членове.



Въпрос 6:  Посочете видовете полиморфизъм в .NET.


 Правилният отговор е:  Полиморфизъм по време на компилиране., Полиморфизъм по време на изпълнение. 
 
 
 
Въпрос 8:  Посочете по какъв начин бихте декларирали шаблонен клас в C#.



 Правилният отговор е:  
 
 
 
 
 class ClassName<T>
{ 

}





Въпрос 9:  Посочете кое от изброените твърдение е вярно за класовете в C#.



Правилният отговор е:   Можем да създаваме инстанции., Описва състоянието и поведението на обектите



Въпрос 10:  Имате следния код: 




Правилният отговор е:   


public class Scale<T> where T : IComparable<T>//2т
    {
        private T left; //1т
        private T right; //1т

        public Scale(T left, T right)//2т
        {
            this.left = left;
            this.right = right;
        }
        public T GetHavier()
        {
            if (left.CompareTo(right) > 0)
            { return left; }
            else if (left.CompareTo(right) < 0)
            { return right; }
            return default(T);
        }
    }
    
    
    
    
    Въпрос 11:  Избройте четирите основни принципа на обектно-ориентираното програмиране. 
    
    
    
    Правилният отговор е:  капсулация, наследяване, абстракция, полиморфизъм 
    
    
    
    
    
    Въпрос 12 :  Имате зададена следната схема:  Методът ExplainMyself ще бъде презаписан или презареден? 
    
    
    
    Правилният отговор е:   Методът ще бъде презаписан, защото се използва в подкласовете и има една и съща сигнатура.
    
    
    
    Въпрос 13: Дайте пример за шаблонен клас, който да се казва Кутия и тази кутия да може да съхранява всичко. В този клас създайте и един метод, 
       който да добавя елемент в края на редицата
       
       
       
    
    Правилният отговор е:
    
    
    
    class Box<T>
    {
        private List<T> items;

        public Box()
        {
            items = new List<T>();  
        }
        public void Add(T item)
        {
            this.items.Add(item);
        }
    }
    
    
    
    
    Въпрос 14: Посочете кое от изброените е дефиниция на метод, който може да бъде презаписан в клас наследник.
    
   
    Правилният отговор е: Виртуален метод.
    
    
    
    
    Въпрос 16: Свържете кои от характеристиките се отнасят за абстрактните класове, кои за интерфейсите.
    
    
    Правилният отговор е:   
    
    
 Може да наследи само един абстрактен клас. [Абстракция]

Могат да предоставят целия код и/или само детайлите, които трябва да се презапишат. [Абстракция]

Може да имплементира няколко интерфейса. [И за двете ]

Може да съдържа модификатори за достъп. [Абстракция]

Не може да предоставя никакъв код, предоставя само описание. [Интерфейси]                        

Нямат модификатори за достъп. Всичко е публично по подразбиране. [Интерфейси]
    
    
    
    Въпрос 17:  Открийте разликите между клас и интерфейс. Кои от изброените твърдения се отнасят за класовете в C#, кои за интерфейсите?
    
    
    
    Правилният отговор е: 
    
    
    
Има както дефиниция, така и реализация. [Клас]

Има само дефиниция. [Интерфейс]

Не може да бъде инстанциран. [Интерфейс]

Може да бъде инстанциран. [Клас]

Може да съдържа членове, методи, заедно с дефиниция и реализация. [Клас]

Набор от дефиниции, които трябва да се приложат. [Интерфейс]



Въпрос 18: Дефинирайте термина полиморфизъм в обектно-ориентираното програмиране, като поставите липсващите думи в текста.


Правилният отговор е: 


Терминът полиморфизъм в обектно-ориентираното програмиране определя, че [едни и същи (еднотипни)] действия се реализират по [различен начин] в зависимост от
обектите, върху които се прилагат. Такива действия се наричат [полиморфични]. За да се реализира [полиморфно действие], класовете на обектите, върху които се
прилага това действие, трябва да имат [общ корен] т.е. да
бъдат производни на [един и същи клас].

