Въпрос 1:  Обяснете как работят снипетите във Visual Studio. 


Правилният отговор е: Зависи от програмния език.Спрямо езика visual studio има определен брой снипети, те се пускат с изписване на съответната дума и 
                      натискане два пъти на клавиша TAB.


Въпрос 2: За какво служи клавишната комбинация Ctrl + F5 във Visual Studio?


Правилният отговор е: стартиране на програмата в стандартен режим



Въпрос 3: Посочете какво означава абревиатурата IDE:

Правилният отговор е: Integrated Development Environment



Въпрос 4: Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за десериализиране от JSON към обект.


Правилният отговор е:  System.Text.Json

                       JsonSerializer.Deserialize<WeatherForecast>(jsonString)



Въпрос 5: Посочете за какво служи клавиша F12 във Visual Studio.



Правилният отговор е: Навигиране в кода /Go to Definition/ до тялото на даден метод



Въпрос 6: Демонстрирайте използването на библиотеката System.Text.Json (в .NET 5+) за десериализиране от JSON към обект.


Правилният отговор е: System.Text.Json
                      JsonSerializer.Deserialize<WeatherForecast>(jsonString)
                      
                      
                      
                      
 Въпрос 7: Обяснете какво е NuGET Package Manager.
 
 
  Правилният отговор е: NuGET Package Manager е пакетен мениджър във VS като позволява да използваме пакети със софтуер.
  
  
  
  
  Въпрос 8: За какво служи клавиш F10 във Visual Studio?
  
  
  Правилният отговор е: стартиране на програмата в режим стъпка-по-стъпка
  
  
  
  
  Въпрос 9: Посочете с коя директива се включват в кода допълнителни библиотеки.
  
  
  
  Правилният отговор е: using
  
  
  
  
  Въпрос 10:  Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

                      фрагмент. Предоставеният фрагмент да се приведе в работещ вид. Class Movie
  
  
  
  
  
  Правилният отговор е:
  
  
  
  Movie.cs



public class Movie

{

    public int Id { get; set; }

    public string Name { get; set; }

    public decimal Rating { get; set; }

    public DateTime Year { get; set; }

}



Program.cs



using System;

using System.Collections.Generic;

using System.Text.Json; // including the JSON library



namespace JSONMovie

{

    class Program

    {

        static void Main(string[] args)

        {

            List<Movie> movies = new List<Movie>();

            movies.Add(new Movie()

            {

                Id = 1,

                Name = "Movie 1",

                Rating = 3,

                Year = DateTime.Parse("1/1/1998")

            });



            movies.Add(new Movie()

            {

                Id = 2,

                Name = "Movie 2",

                Rating = 3,

                Year = DateTime.Parse("1/1/2006")

            });



            string jsonString = JsonSerializer.Serialize(movies);



            Console.WriteLine(jsonString);

        }

    }

}



Въпрос 11: Обяснете предназначението на breakpoint (точки на счупване) в дебъгера на Visual Studio.




 Правилният отговор е: 
 
 Точките на счупване (breakpoints) в дебъгера на Visual Studio са инструмент, който позволява на програмиста да временно спре изпълнението на
 програмата в точката, където точката е поставена, за да може да анализира състоянието на програмата на тази точка.
Това е много полезен инструмент, който позволява на програмиста да проследи изпълнението на програмата стъпка по стъпка, за да установи
къде се появява грешката в кода или да анализира поведението на програмата в определена точка. Точките на счупване могат да бъдат поставяни на
конкретни редове от кода, за да може програмиста да анализира състоянието на програмата в този момент.
Когато програмата се изпълнява и достигне точка на счупване, изпълнението се спира и програмистът може да анализира стойностите
на променливите, извиканите методи, стека на извикване и други детайли, които могат да му помогнат да разбере какво се случва в програмата.
След анализа на състоянието на програмата в точката на счупване, програмистът може да реши дали да продължи изпълнението на програмата или да
коригира кода на програмата и да я пусне на ново.




Въпрос 12: Посочете коя от изброените програми e среда за разработка на софтуер.



 Правилният отговор е:   Visual Studio
 
 
 Въпрос 13: За какво служи клавишната комбинация Ctrl + K, Ctrl + D?
 
 
         Правилният отговор е: подреждане на кода
         
         
         
  Въпрос 14 :Обяснете каква е разликата между Solution (Решение) и Project (Проект) във Visual Studio.
  
  
   Правилният отговор е:
   
Solution (Решение) в Visual Studio е колекция от един или повече проекти (projects), които са свързани и се поддържат заедно. 
Solution предоставя организационна и управленска структура на един или повече проекти.
Project (Проект) във Visual Studio е съвкупност от файлове и ресурси, които се съдържат в една програмна единица. 
Това може да бъде библиотека, приложение, уеб сайт и други.
Така че, основната разлика между Solution и Project в Visual Studio е, че Solution е организационна структура, която включва един 
или повече проекти, докато Project е програмна единица, която съдържа изходен код, изображения, ресурси и други файлове, 
необходими за създаването на приложение или библиотека
  
  
  
  
  
  Въпрос 15: Посочете как се нарича пакетния мениджър в .NET?
  
  
  Правилният отговор е: NuGET
  
  
  
  
  Въпрос 16: Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.
  
  
  
  Правилният отговор е:
  
Свържете всеки от посочените случаи с решение, в което средата се използва пълноценно.

Кодът не е добре подреден - [използваме автоматично форматиране (подреждане)]

Разполагаме с файл с около 3000 реда, трябва да намерим тялото на метод, чието име знаем - [Навигираме до метода с помощта на F12]

Налага се често да пишем стандартни фрагменти код - [Използваме снипети, където е възможно]
  
  
  
  Въпрос 17: Изложете поне 2 разлики между интегрирана среда за разработка (IDE) и текстов редактор.
  
  
   Правилният отговор е:
   
   
   
1- Функционалност: IDE предоставя богат набор от инструменти и функционалности за разработка на софтуер, като
 среди тях включва интегриране на дебъгер, вграден компилатор и дизайнер на потребителски интерфейси. В сравнение с 
 това, текстовият редактор обикновено предоставя само функционалности за редактиране на текст.

2- Сложност: Интегрираната среда за разработка обикновено е по-сложна и изисква повече време за усвояване, докато текстовият 
редактор е по-лесен за работа и по-бърз за стартиране. IDE обикновено има по-голямо потребление на ресурси, като оперативна
памет и процесорна мощност, в сравнение с текстовия редактор.
  
 
 
 
 Въпрос 18: За всяка от клавишните комбинации задайте нейното действие във Visual Studio
 
 
 Правилният отговор е:
 
 
 Ctrl-K + Ctrl-C [закоментиране на избраните редове]

Ctrl-K + Ctrl-U [премахване на коментар от избраните редове]

Ctrl-K + Ctrl-D [подреждане (форматиране) на кода]

Ctrl + Shift + N [създаване на нов файл]



Въпрос 19: Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

фрагмент. Предоставеният фрагмент да се приведе в работещ вид. Class Game


Правилният отговор е:

 
 //Game.cs

public class Game

{

    public int Id { get; set; }

    public string Name { get; set; }

    public decimal Rating { get; set; }

    public DateTime Year { get; set; }

}



///Program.cs

using System;

using System.Collections.Generic;

using System.Text.Json;



namespace JSONGame

{

    class Program

    {

        static void Main(string[] args)

        {

            List<Game> games = new List<Game>();

            games.Add(new Game()

            {

                Id = 1,

                Name = "Game 1",

                Rating = 3,

                Year = DateTime.Parse("1/1/1998")

            });



            games.Add(new Game()

            {

                Id = 2,

                Name = "Game 2",

                Rating = 3,

                Year = DateTime.Parse("1/1/2006")

            });



            string jsonString = JsonSerializer.Serialize(games);



            Console.WriteLine(jsonString);

        }

    }

}




Въпрос 20: Посочете коя от следните команди е коректна команда за инсталиране на пакета Banichka чрез Package Manager Console във Visual Studo.


Правилният отговор е: Install-Package Banichka


Въпрос 21: Пример: По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен

фрагмент. Предоставеният фрагмент да се приведе в работещ вид. Class CAR


Правилният отговор е:




using System;

using System.Collections.Generic;

using System.Text.Json; // Добавено, за да използваме JsonSerializer



namespace JSONCar

{

    class Program

    {

        static void Main(string[] args)

        {

            List<Car> cars = new List<Car>(); // Добавена спецификация на типа 'Car'

            

            cars.Add(new Car()

            {

                Id = 1,

                Model = "Car 1",

                Km = 300000,

                FirstRegister = DateTime.Parse("1/1/1998")

            });



            cars.Add(new Car()

            {

                Id = 2,

                Model = "Car 2",

                Km = 230000,

                FirstRegister = DateTime.Parse("1/8/2006")

            });



            string jsonString = JsonSerializer.Serialize(cars); // Добавена Serialize функцията



            Console.WriteLine(jsonString);

        }

    }

}











  
  
  
  
  
  
  
  
  
  
  
  
  
  
                      
                      
                      
                      
                      
                      
                      
                      

























