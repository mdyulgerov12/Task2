Въпрос 1:Дефинирайте понятието псевдоним в базите от данни и посочете за какво се използва.

Правилен отговор: 

Псевдонимът в базите данни е алтернативно име за колона в таблица или за цялата таблица, което може да се използва в заявки (query) за по-удобна работа с данните.
Псевдонимите могат да се използват за много цели, включително за:
Подобряване на четимостта на заявките
Скриване на реалното име на колоните 
Съкращаване на дълги имена на таблиците
Комбиниране на данни от различни таблиците



Въпрос 2:  Посочете резултата от изпълнението на следната заявка:

SELECT employee_id AS id, first_name, last_name

  FROM employees;
  
  
 Правилен отговор:  Колоната employee_id ще се преименува на id.
 
 
 Въпрос 3:  В така представения код има допуснати пропуски. Поправете кода и го представете, така че да извежда най-ниско платените служители от таблицата.

SELECT e.first_name, e.last_name, e.salary 

employees e

WHERE e.salary = 

  (

SELECT salary FROM employees ASC salary LIMIT 1

);


Правилен отговор:

SELECT e.first_name, e.last_name, e.salary 
FROM employees e
WHERE e.salary = 
(SELECT MIN(salary) FROM employees);
 
 
Въпрос 4: Посочете верния отговор за създаване на заявка, която извлича името на отдела от таблицата.


Правилен отговор:   SELECT name FROM departments;


Въпрос 5:  Посочете резултата от изпълнението на следната заявка:

SELECT first_name, last_name, salary FROM employees;


Правилен отговор:  Извлича първо име и фамилия и заплата на служителите



Въпрос 6:  Следната заявка ще изтрие всички записи от таблицата.

DELETE FROM `employees`

WHERE `employee_id` = 1;


Правилен отговор:  Неистина


Въпрос 7:  Посочете резултата от изпълнение на следната заявка: 

SELECT * from projects WHERE end_date IS NULL;


Правилен отговор:  Извежда всички колони от таблицата и само тези записи, които са NULL в колоната крайна дата.



Въпрос 9:  Имате представена подзаявка за намиране служителите от отдел финанси и извеждане на всички колони от таблицата. 
Поставете липсващите думи, за да направите работещ код.


SELECT * FROM employees
 blank department_id  blank

  (

   SELECT department_id
     blank departments

     blank name = 'Finance'  );



Правилен отговор:


SELECT * FROM employees
 [WHERE] department_id [ IN ]

  (

   SELECT department_id
   [ FROM ] departments

    [ WHERE ] name = 'Finance'  );


Въпрос 9:  Посочете резултата от изпълнението на следната заявка: 

UPDATE employees

SET salary = salary*1.10

WHERE department_id = 7;



Правилен отговор:  Ще промени таблицата, като стойността на заплатата ще бъде променена само на записите, които са с номер на отдел 7.



Въпрос 10:  Допишете следната заявка, така че да изведе служителите със заплати между 20000 и 30000.

SELECT `last_name`, `salary` FROM `employees`



Правилен отговор:  

SELECT last_name, salary FROM `employees`

WHERE salary BETWEEN 20000 AND 30000;


Въпрос 11:  Изберете липсващите думи в следната заявка, така че да получите служителите със заплата по-голяма от 50000.


Правилен отговор: 


[ SELECT ] e.employee_id, e.first_name, e.salary, d.name 
[ FROM ] employees AS e
JOIN departments AS d ON d.department_id = e.department_id
[ WHERE ] e.salary > 50000
[ ORDER BY ] d.department_id DESC;



Въпрос 12:  Следната заявка извлича от таблица projects колоната с крайна дата на проекти, която е NULL

UPDATE projects

   SET end_date = '2017-05-29'

 WHERE end_date IS NULL;
 
 
 Правилен отговор:  Неистина
 
 
 Въпрос 13:  Посочете резултата от изпълнението на следната заявка:

UPDATE employees

set last_name = 'Dani'

WHERE employee_id = '1';


Правилен отговор:  Ще промени таблицата и на служител с име Dani ще добави номер на служител 1.


Въпрос 14:  Във вашата база от данни Soft_uni имате създадена таблица Employees с 500 записа. Необходимо е да добавите нова колона с име salary. 
Напишете заявка за добавяне на колоната в таблица employees. 


 Правилен отговор:
 
ALTER TABLE Employees
ADD COLUMN salary DECIMAL(10, 2);



Въпрос 15:  В база от данни People имате таблица persons, състояща се от 4 колони и те са следните:

PersonID int NOT NULL,

FirstName varchar(25) NOT NULL,

email VARCHAR(10),

 Age int );

В таблицата имате достатъчен брой записи, които не трябва да загубите. Вашият мениджър ви поставя задача да промените 
броя на символите на колоната е-мейл, като ги увеличите на 100. Напишете заявка за промяна на колоната и съответно на таблицата persons.



Правилен отговор: ALTER TABLE persons MODIFY COLUMN email VARCHAR(100);


Въпрос 16:  Създайте таблица cities, която да съдържа две колони - id и name, като прецените типа данни, който да укажете за двете колони. 
         Колоната id да бъде първичен ключ.



Правилен отговор:

CREATE TABLE cities (
  id INT PRIMARY KEY,
  name VARCHAR(50) NOT NULL
);



Въпрос 17:  Посочете какво прави клаузата FULL JOIN.


 
 Правилен отговор:
 
 Клаузата FULL JOIN (или FULL OUTER JOIN) в SQL съчетава редовете от две или повече таблиците, като включва всички редове от двете таблиците.
 Ако има съвпадение на редове между таблиците, те ще бъдат комбинирани, а останалите редове, които не съвпадат, ще бъдат включени с 
 null стойности за липсващите колони. 
 Така FULL JOIN връща всички редове от лявата таблица и всички редове от дясната таблица, включително тези, които не съвпадат в двете таблиците.



Въпрос 18:  Посочете правилния код за създаване на заявка, която извлича всички записи от таблицата.
  
  
  
 Правилен отговор:  SELECT * FROM departments;
 
 
 
 Въпрос 19:  Пояснете какво прави връзката RIGHT OUTER JOIN.
 
 
 
 
 Правилен отговор: 
 
 RIGHT OUTER JOIN (или просто RIGHT JOIN) е вид операция за свързване на таблици в SQL, 
 която извлича всички редове от дясната таблица и редовете от лявата таблица, които имат съвпадащи стойности в указаните колони за свързване.
 Ако не съществува съвпадение, стойностите за лявата таблица се попълват с NULL.
 
 RIGHT OUTER JOIN връща всички редове от дясната таблица, дори ако не съществуват съвпадения в лявата таблица.
 


Въпрос 20:  В дадения код имате обединяване на заявки чрез клаузата UNION. Попълнете чрез влачене липсващите думи в кода, така че да 
получите работеща заявка, която да извежда данни от база от данни geography и да сортира колона name.

(select river_name as name  blank rivers)
  UNION

( blank mountain_range from mountains)

 blank name ASC LIMIT 100


Правилен отговор: 



(select river_name as name [ FROM ] rivers)
  UNION

( [ SELECT ] mountain_range from mountains)

[ ORDER BY ] name ASC LIMIT 100



Въпрос 21:  Посочете верния отговор за създаване на заявка, която извлича името на отдела от таблицата.


Правилен отговор:   SELECT name FROM departments;


Въпрос 22: Посочете какво прави клаузата INNER JOIN:


Правилен отговор: 

Клаузата INNER JOIN се използва за съчетаване на две или повече таблиците по определени критерии, като в резултат се получава нова таблица, 
която съдържа само редовете, които отговарят на условието за съчетаване на двата набора от данни. 
Това означава, че само редовете, които имат съвпадащи стойности в полетата, които са специфицирани в условието на съчетаване
(чрез оператора ON или WHERE), ще бъдат включени в резултатната таблица. 
INNER JOIN е най-често използваната операция за съчетаване на данни в SQL заявки.














